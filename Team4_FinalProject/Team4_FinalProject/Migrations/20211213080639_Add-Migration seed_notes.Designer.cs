// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Team4_FinalProject.Models;

namespace Team4_FinalProject.Migrations
{
    [DbContext(typeof(TicketManagerDbContext))]
    [Migration("20211213080639_Add-Migration seed_notes")]
    partial class AddMigrationseed_notes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Team4_FinalProject.Models.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 12, 13, 2, 6, 39, 97, DateTimeKind.Local).AddTicks(6022));

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("NoteId");

                    b.HasIndex("TicketId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Team4_FinalProject.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOpened")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 12, 13, 2, 6, 39, 92, DateTimeKind.Local).AddTicks(797));

                    b.Property<string>("Issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 3,
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Issue = "Life?",
                            Status = "In Progress",
                            UserId = 5
                        },
                        new
                        {
                            TicketId = 1,
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Issue = "Electronics?",
                            Status = "In Progress",
                            UserId = 4
                        },
                        new
                        {
                            TicketId = 2,
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Issue = "Toaster?",
                            Status = "Completed",
                            UserId = 5
                        },
                        new
                        {
                            TicketId = 4,
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Issue = "Printer?",
                            Status = "Completed",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Team4_FinalProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTechnician")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Chasidy",
                            IsTechnician = true,
                            LastName = "Spurgeon",
                            Password = "password",
                            Username = "Chasidy"
                        },
                        new
                        {
                            UserId = 2,
                            FirstName = "Wade",
                            IsTechnician = true,
                            LastName = "Shafer",
                            Password = "password",
                            Username = "Wade"
                        },
                        new
                        {
                            UserId = 3,
                            FirstName = "John",
                            IsTechnician = true,
                            LastName = "Ryan",
                            Password = "password",
                            Username = "John"
                        },
                        new
                        {
                            UserId = 4,
                            FirstName = "Logan",
                            IsTechnician = true,
                            LastName = "Riedell",
                            Password = "password",
                            Username = "Logan"
                        },
                        new
                        {
                            UserId = 5,
                            FirstName = "Tom",
                            IsTechnician = false,
                            LastName = "Hanks",
                            Password = "passWord1",
                            Username = "GoodJoe12"
                        });
                });

            modelBuilder.Entity("Team4_FinalProject.Models.Note", b =>
                {
                    b.HasOne("Team4_FinalProject.Models.Ticket", "Ticket")
                        .WithMany("Notes")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Team4_FinalProject.Models.Ticket", b =>
                {
                    b.HasOne("Team4_FinalProject.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Team4_FinalProject.Models.Ticket", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Team4_FinalProject.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
